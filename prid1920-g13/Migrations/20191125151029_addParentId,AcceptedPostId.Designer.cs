// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using prid_1819_g13.Models;

namespace prid_1819_g13.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20191125151029_addParentId,AcceptedPostId")]
    partial class addParentIdAcceptedPostId
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("prid_1819_g13.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("prid_1819_g13.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Body")
                        .IsRequired();

                    b.Property<int?>("ParentId");

                    b.Property<DateTime>("Timestamp");

                    b.Property<string>("Title");

                    b.Property<int>("UserId");

                    b.Property<int?>("acceptedPostId");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "salut c'est cool",
                            Timestamp = new DateTime(2019, 10, 3, 11, 11, 11, 0, DateTimeKind.Unspecified),
                            Title = "Essai",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Body = "salut c'est cool2",
                            Timestamp = new DateTime(2018, 8, 21, 13, 11, 11, 0, DateTimeKind.Unspecified),
                            Title = "Essai2",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Body = "salut c'est cool3",
                            ParentId = 1,
                            Timestamp = new DateTime(2018, 2, 26, 1, 24, 5, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("prid_1819_g13.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("prid_1819_g13.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("BirthDate");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("Pseudo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("Reputation");

                    b.Property<int>("Role");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Pseudo")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1994, 11, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "nicolas.godfrin@live.be",
                            FirstName = "Nicolas",
                            LastName = "Godfrin",
                            Password = "123",
                            Pseudo = "Nico",
                            Reputation = 5,
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1995, 9, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "raphCosta@hotmail.com",
                            FirstName = "Raphael",
                            LastName = "Costa",
                            Password = "123",
                            Pseudo = "Raph",
                            Reputation = 2,
                            Role = 0
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1989, 3, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@hotmail.com",
                            FirstName = "admin",
                            LastName = "admin",
                            Password = "admin",
                            Pseudo = "admin",
                            Reputation = 5,
                            Role = 2
                        });
                });

            modelBuilder.Entity("prid_1819_g13.Models.Vote", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("PostId");

                    b.Property<DateTime>("Timestamp");

                    b.Property<int>("UpDown");

                    b.HasKey("UserId", "PostId");

                    b.ToTable("Votes");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PostId = 1,
                            Timestamp = new DateTime(2019, 10, 3, 13, 25, 42, 0, DateTimeKind.Unspecified),
                            UpDown = 1
                        },
                        new
                        {
                            UserId = 2,
                            PostId = 1,
                            Timestamp = new DateTime(2019, 10, 3, 13, 45, 42, 0, DateTimeKind.Unspecified),
                            UpDown = 1
                        },
                        new
                        {
                            UserId = 1,
                            PostId = 2,
                            Timestamp = new DateTime(2019, 5, 3, 13, 55, 42, 0, DateTimeKind.Unspecified),
                            UpDown = 1
                        },
                        new
                        {
                            UserId = 1,
                            PostId = 3,
                            Timestamp = new DateTime(2019, 1, 3, 13, 25, 42, 0, DateTimeKind.Unspecified),
                            UpDown = -1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
